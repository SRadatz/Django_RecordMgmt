# Generated by Django 3.1.4 on 2020-12-06 21:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Auditor',
            fields=[
                ('auditor_id', models.IntegerField(db_column='Auditor_ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=16)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('password', models.CharField(db_column='Password', max_length=32)),
                ('create_time', models.DateTimeField(blank=True, db_column='Create_time', null=True)),
            ],
            options={
                'db_table': 'auditor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.IntegerField(db_column='Employee_ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=16)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('password', models.CharField(db_column='Password', max_length=32)),
                ('create_time', models.DateTimeField(blank=True, db_column='Create_time', null=True)),
            ],
            options={
                'db_table': 'employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Grant',
            fields=[
                ('grant_id', models.IntegerField(db_column='Grant_ID', primary_key=True, serialize=False)),
                ('approve_deny', models.IntegerField(blank=True, db_column='Approve/Deny', null=True)),
                ('approval_date', models.DateField(blank=True, db_column='Approval_date', null=True)),
                ('approval_manager', models.CharField(blank=True, db_column='Approval_manager', max_length=45, null=True)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=45, null=True)),
                ('allocated', models.CharField(blank=True, db_column='Allocated', max_length=45, null=True)),
                ('start_date', models.DateField(blank=True, db_column='Start_date', null=True)),
                ('end_date', models.DateField(blank=True, db_column='End_date', null=True)),
            ],
            options={
                'db_table': 'grant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Grantee',
            fields=[
                ('grantee_id', models.IntegerField(db_column='Grantee_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=45, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=45, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=45, null=True)),
                ('postal_code', models.CharField(blank=True, db_column='Postal_code', max_length=45, null=True)),
            ],
            options={
                'db_table': 'grantee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GranteeBank',
            fields=[
                ('bank_id', models.IntegerField(db_column='Bank_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=45, null=True)),
                ('account_number', models.CharField(blank=True, db_column='Account_number', max_length=45, null=True)),
                ('routing_number', models.CharField(blank=True, db_column='Routing_number', max_length=45, null=True)),
            ],
            options={
                'db_table': 'grantee_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Managers',
            fields=[
                ('manager_id', models.IntegerField(db_column='Manager_ID', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=45, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=45, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=45, null=True)),
                ('grants_approved', models.CharField(blank=True, db_column='Grants_approved', max_length=45, null=True)),
            ],
            options={
                'db_table': 'managers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('nonprofit_id', models.IntegerField(db_column='Nonprofit_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=45, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=45, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=45, null=True)),
                ('postal_code', models.CharField(blank=True, db_column='Postal_Code', max_length=45, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=45, null=True)),
            ],
            options={
                'db_table': 'organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('status_id', models.IntegerField(db_column='Status_ID', primary_key=True, serialize=False)),
                ('applied', models.IntegerField(blank=True, db_column='Applied', null=True)),
                ('loi', models.IntegerField(blank=True, db_column='Loi', null=True)),
                ('review', models.IntegerField(blank=True, db_column='Review', null=True)),
                ('approved', models.IntegerField(blank=True, db_column='Approved', null=True)),
                ('active', models.IntegerField(blank=True, db_column='Active', null=True)),
                ('archived', models.IntegerField(blank=True, db_column='Archived', null=True)),
            ],
            options={
                'db_table': 'status',
                'managed': False,
            },
        ),
    ]
